BEGIN;

-- Удаляем старую таблицу если она существует
DROP TABLE IF EXISTS car_services CASCADE;

-- Создаем новую таблицу
CREATE TABLE car_services (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
  
  -- Основная информация о клиенте
  name TEXT NOT NULL,
  phone TEXT NOT NULL,
  
  -- Информация об автомобиле
  car_brand TEXT NOT NULL,
  car_number TEXT NOT NULL,
  current_mileage INTEGER NOT NULL,
  
  -- История обслуживания
  last_service_date DATE,
  oil_type TEXT,
  last_service_mileage INTEGER,
  recommended_interval INTEGER,
  
  -- Информация о текущем визите
  service_date DATE NOT NULL,
  work_types TEXT[] NOT NULL,
  additional_work TEXT,
  master_notes TEXT,
  
  -- Системные поля
  user_id UUID REFERENCES auth.users,
  status TEXT DEFAULT 'pending'
);

-- Индексы
CREATE INDEX car_services_car_number_idx ON car_services(car_number);
CREATE INDEX car_services_phone_idx ON car_services(phone);
CREATE INDEX car_services_service_date_idx ON car_services(service_date);

-- RLS политики
ALTER TABLE car_services ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Allow anonymous inserts to car_services"
  ON car_services
  FOR INSERT
  WITH CHECK (true);

-- Комментарии
COMMENT ON TABLE car_services IS 'Записи на техническое обслуживание';
COMMENT ON COLUMN car_services.status IS 'Статус записи: pending, confirmed, completed, cancelled';

COMMIT;
